
@model IEnumerable<NavigateViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Ace/_Layout.cshtml";
}

@section header{

    <link href="http://cdn.bootcss.com/jquery-treegrid/0.2.0/css/jquery.treegrid.min.css" rel="stylesheet">
    <link href="http://cdn.bootcss.com/select2/4.0.3/css/select2.min.css" rel="stylesheet">
    <link href="http://cdn.bootcss.com/select2-bootstrap-theme/0.1.0-beta.10/select2-bootstrap.min.css" rel="stylesheet">
    <link href="http://cdn.bootcss.com/select2-bootstrap-css/1.4.6/select2-bootstrap.min.css" rel="stylesheet">
}

<div class="page-header">
    <h1>
        导航菜单
        <small>
            <i class="icon-double-angle-right"></i>
            预览
        </small>
    </h1>
</div>

<div class="page-body">

    <div id="toolbar" class="btn-group">
        <button id="btn_expandAll" type="button" class="btn btn-primary">
            <span class="icon-arrow-right icon-on-right" style="margin-right:3px;" aria-hidden="true"></span>展开
        </button>
        <button id="btn_add" type="button" class="btn btn-primary">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>新增
        </button>
        <button id="btn_info" type="button" class="btn btn-info">
            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>查看
        </button>
        <button id="btn_edit" type="button" class="btn btn-warning">
            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>修改
        </button>
        <button id="btn_delete" type="button" class="btn btn-danger">
            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除
        </button>
    </div>

    <!--Navigate Tree-->
    <div class="row" style="margin-top:20px;">
        <div class="col-md-12">
            <table id="navigate_tree" class="table tree-2 table-bordered table-hover table-striped table-condensed">
                <thead>
                    <tr>
                        <th class="center">
                            <input type="checkbox" style="height:20px;width:20px;" />
                        </th>
                        <th>
                            主键
                        </th>
                        <th>
                            父ID
                        </th>
                        <th>
                            导航菜单名
                        </th>
                        <th>
                            控制器
                        </th>
                        <th>
                            行为名称
                        </th>
                        <th>
                            图标样式
                        </th>
                        <th>
                            启用
                        </th>
                        <th>
                            顺序
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="treegrid-@item.ID @(item.ParentID.HasValue?"treegrid-parent-"+item.ParentID:null)">
                            <td class="center">
                                <input type="checkbox" style="height:20px;width:20px;" />
                            </td>
                            <td>@item.ID</td>
                            <td>@(item.ParentID.HasValue ? item.ParentID.Value : -1)</td>
                            <td>@item.Name</td>
                            <td>@(item.ControllerName ?? "#")</td>
                            <td>@(item.ActionName ?? "#")</td>
                            <td>@item.IconClassCode</td>
                            <td>@item.Active</td>
                            <td>@item.SortOrder</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<div id="div_navigate" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">添加导航</h4>
            </div>
            <div id="div_navigate_body" class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">取消</button>
                <button type="button" id="add_navigate" class="btn btn-primary">保存</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

@section footer{
    <script src="http://cdn.bootcss.com/jquery-cookie/1.4.1/jquery.cookie.min.js"></script>
    <script src="http://cdn.bootcss.com/jquery-treegrid/0.2.0/js/jquery.treegrid.min.js"></script>
    <script src="http://cdn.bootcss.com/jquery-treegrid/0.2.0/js/jquery.treegrid.bootstrap3.min.js"></script>

    @*<script src="http://cdn.bootcss.com/select2/4.0.3/js/i18n/zh-CN.js"></script>*@
    <script src="http://cdn.bootcss.com/select2/4.0.3/js/select2.min.js"></script>
    <script src="http://cdn.bootcss.com/select2/4.0.3/js/i18n/zh-CN.js"></script>
    <script src="~/DJLContent/select2tree.js"></script>


    <script type="text/javascript">
        $(function () {
            $('#navigate_tree').treegrid({
                expanderExpandedClass: 'glyphicon glyphicon-minus',
                expanderCollapsedClass: 'glyphicon glyphicon-plus',
                saveState: true,
                saveStateMethod: 'cookie',
                initialState: 'expanded'
            });

            initEvent();
        });

        function initEvent() {
            $('#btn_expandAll').click(function () {
                $('#navigate_tree').treegrid('expandAll');
            });
            $('#navigate_tree tbody tr').on('click', function (e) {
                e.preventDefault();
                e.stopPropagation();
                var $this = $(this);
                var check = $(this).find('input[type="checkbox"]').first();
                if (check.is(':checked')) {
                    check.prop('checked', false);
                    RecursiveUnSelectChildren($this);
                    RecursiveUnSelectParent($this);
                } else {
                    check.prop('checked', true);
                    RecursiveSelectChildren($this);
                    RecursiveSelectParent($this);
                }

                // 判断是否全部选中
                var allChecked = true;
                $('#navigate_tree tbody input[type="checkbox"]').each(function () {
                    if (!$(this).is(':checked')) {
                        allChecked = false; return;
                    }
                });
                var all = $('#navigate_tree thead input[type="checkbox"]').first();
                if (allChecked) {
                    all.prop('checked', true);
                } else {
                    all.prop('checked', false);
                }
            });
            $('#navigate_tree thead input[type="checkbox"]').on('change', function () {
                var $this = $(this);
                if ($this.is(':checked')) {
                    $('#navigate_tree tbody input[type="checkbox"]').each(function () {
                        $(this).prop('checked', true);
                    });
                } else {
                    $('#navigate_tree tbody input[type="checkbox"]').each(function () {
                        $(this).prop('checked', false);
                    });
                }
            });
            $('#navigate_tree tbody .treegrid-expander.glyphicon').click(function (event) {
                event.preventDefault();
                event.stopPropagation();
            });
            $('#btn_add').click(function () {
                $.get('/Navigate/Add', {}, function (body) {
                    $('#div_navigate_body').empty();
                    $('#div_navigate_body').html(body);
                    BindEvents();
                    $('#div_navigate').modal('show');
                });
            });
            $('#add_navigate').click(function () {
                var fk = $('#form').serialize();
                console.log(fk);
            });
        }

        function BindEvents() {
            $("#tree_select").select2tree({
                minimumResultsForSearch: -1
            });
            $('#select_action').select2({
                minimumResultsForSearch: -1
            });
            var initControlName = $('#select_controller').find('option').first().text();
            $.post('/Navigate/GetActionByController', { controllerName: initControlName }, function (html) {
                $('#select_action').empty();
                $('#select_action').html(html);
            });
            $('#select_controller').select2({
                minimumResultsForSearch: -1
            }).on('change', function (e) {
                var controllerName = e.target.value;
                $.post('/Navigate/GetActionByController', { controllerName: controllerName }, function (html) {
                    $('#select_action').empty();
                    $('#select_action').html(html);
                });
            });

            $('#form input[type="checkbox"]').on('change', function () {
                var $this = $(this);
                var hide = $('#IsActive');
                if ($this.is(':checked')) {
                    hide.val('true');
                } else {
                    hide.val('false');
                }
            });
        }

        function RecursiveUnSelectChildren(currentNode) {
            var childs = $(currentNode).treegrid('getChildNodes');
            if (childs.length > 0) {
                for (var i = 0; i < childs.length; i++) {
                    $(childs[i]).find('input[type="checkbox"]').prop('checked', false);
                    RecursiveUnSelectChildren(childs[i]);
                }
            }
        }

        function RecursiveUnSelectParent(currentNode) {
            var parent = $(currentNode).treegrid('getParentNode');
            if (parent != null) {
                var isCancelParent = true;
                var childs = parent.treegrid('getChildNodes');
                for (var i = 0; i < childs.length; i++) {
                    var box = $(childs[i]).find('input[type="checkbox"]');
                    if (box.is(':checked')) {
                        isCancelParent = false;
                        break;
                    }
                }
                if (isCancelParent)
                    parent.find('input[type="checkbox"]').prop('checked', false);
                RecursiveUnSelectParent(parent);
            }
        }

        function RecursiveSelectChildren(currentNode) {
            var childs = $(currentNode).treegrid('getChildNodes');
            if (childs.length > 0) {
                for (var i = 0; i < childs.length; i++) {
                    $(childs[i]).find('input[type="checkbox"]').prop('checked', true);
                    RecursiveSelectChildren(childs[i]);
                }
            }
        }

        function RecursiveSelectParent(currentNode) {
            var parent = $(currentNode).treegrid('getParentNode');
            if (parent != null) {
                parent.find('input[type="checkbox"]').prop('checked', true);
                RecursiveSelectParent(parent);
            }
        }
    </script>
}